name: 'CI Provision'
on:
    pull_request:
        types:
            - opened
            - reopened
        branches:
            - develop
            - 'feature/**'
            - 'bugfix/**'
            - 'release/**'
            - 'hotfix/**'
            - 'support/**'
    push:
        branches:
            - develop
            - 'feature/**'
            - 'bugfix/**'
            - 'release/**'
            - 'hotfix/**'
            - 'support/**'

env:
    TF_CLOUD_ORGANIZATION: "${{ secrets.TF_CLOUD_ORGANIZATION }}"
    TF_API_TOKEN: "${{ secrets.TF_API_TOKEN }}"
    TF_WORKSPACE: ${{ vars.TF_WORKSPACE }}
    CONFIG_DIRECTORY: "./"
    CLOUDFLARE_TOKEN: ${{ secrets.CLOUDFLARE_TOKEN }}
    ROOT_PASSWORD: ${{ secrets.ROOT_PASSWORD }}
    DB_NAME: ${{ secrets.DB_NAME }}
    USERNAME_DB: ${{ secrets.USERNAME_DB }}
    USERNAME: ${{ secrets.USERNAME }}
    PASSWORD: ${{ secrets.PASSWORD }}
    DOMAIN_NAME: ${{ vars.DOMAIN_NAME }}
    TITLE: ${{ vars.TITLE }}
    DOMAIN_NAME_FOR_CF: ${{ vars.DOMAIN_NAME_FOR_CF }}
    SUBDOMAIN_PART_FOR_CF: ${{ vars.SUBDOMAIN_PART_FOR_CF }}
    

jobs:
    terraform:
        name: "Terraform Plan"
        runs-on: ubuntu-latest
        permissions:
            contents: read
            pull-requests: write
        steps:
          - name: Checkout
            uses: actions/checkout@v4
          - name: Setup Terraform
            uses: hashicorp/setup-terraform@v3v1.6.3
            with:
              terraform_version: "1.6.3"
              cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
          - name: Init terraform
            run: terraform init
            id: Init

          - id: plan
            run: terraform plan -no-color

          - id: apply
            run: terraform apply -no-color
          - name: Update PR
            if: github.event_name == 'pull_request'
            uses: actions/github-script@v7
            id: plan-comment
            with:
                script: |
                  const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
                  #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`

                  #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`

                  <details><summary>Show Plan</summary>

                  \`\`\`\n
                  ${process.env.PLAN}
                  \`\`\`

                  </details>

                  *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;

                  github.rest.issues.createComment({
                    issue_number: context.issue.number,
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    body: output
                  })


                